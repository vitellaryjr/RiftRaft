[manifest]
version = "1.0.0"
dump_lua = true
priority = 1

# add the void UI and the void pack card area
[[patches]]
[patches.pattern]
target = "game.lua"
pattern = '''
self.play = CardArea(
    0, 0,
    CAI.play_W,CAI.play_H, 
    {card_limit = 5, type = 'play'})
'''
position = "after"
payload = '''
self.riftraft_void = RIFTRAFT.VoidCardArea(
    0, 0,
    CAI.discard_W, CAI.discard_W, -- square
    {card_limit = 500, type = 'void'})
local limit = 5
if next(SMODS.find_mod('Cryptid')) then
    limit = 1e20
end
self.riftraft_rifthand = RIFTRAFT.RiftHand(
    0, 0,
    CAI.hand_W,CAI.hand_H, 
    {card_limit = self.GAME.starting_params.hand_size, highlight_limit = limit, type = 'rifthand'}
)
'''
match_indent = true

# set positions of void UI and void pack card area
[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = "G.hand:hard_set_VT()"
position = "before"
payload = '''
G.riftraft_void.T.x = G.deck.T.x + 0.25 -- just kinda eyeballing it to line it up with the deck
G.riftraft_void.T.y = G.deck.T.y - 2.5
-- if we have betmma installed, move the void up above its UI
if next(SMODS.find_mod('BetmmaAbilities')) or next(SMODS.find_mod('BetmmaSpells')) then
    -- ... but if we ALSO have reverie, then it won't fit there either
    -- so move it *down*, and we'll also move the deck UI when the void UI shows up
    if next(SMODS.find_mod('Reverie')) then
        G.riftraft_void.T.y = G.deck.T.y - 0.75
        G.riftraft_void.move_deck = true
        G.riftraft_void.orig_deck_t = {
            x = G.deck.T.x,
            y = G.deck.T.y,
            w = G.deck.T.w,
            h = G.deck.T.h,
        }
    else
        G.riftraft_void.T.y = G.deck.T.y - 5
    end
end

G.riftraft_rifthand.T.x = G.hand.T.x
G.riftraft_rifthand.T.y = G.hand.T.y

G.riftraft_void:hard_set_VT()
G.riftraft_rifthand:hard_set_VT()
'''
match_indent = true

# shuffle the void when opening up a void pack
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = 'G.GAME.pack_choices = self.config.center.config.choose or 1'
position = "before"
payload = '''
if booster_obj and booster_obj.key:find('p_riftraft_voidpack') and G.riftraft_void then
    G.riftraft_void:shuffle("voidpack_draw")
end
    
'''
match_indent = true

# don't allow using consumables from the void hand
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = 'function Card:can_use_consumeable(any_state, skip_check)'
position = "after"
payload = '''
    if self.area == G.riftraft_rifthand and not any_state then return false end
'''
match_indent = true

# don't create a Use button for void hand consumeables
[[patches]]
[patches.regex]
target = 'card.lua'
pattern = "(?<indent>[\t ]*)if self.highlighted and self.area and self.area.config.type ~= 'shop'(?<a> )then"
position = 'at'
root_capture = 'a'
payload = " and self.area.config.type ~= 'rifthand' "

# send void pack cards back into the void once the booster pack is done
[[patches]]
[patches.pattern]
target = "functions/button_callbacks.lua"
pattern = 'G.FUNCS.draw_from_hand_to_deck()'
position = "after"
payload = '''
if G.riftraft_rifthand then RIFTRAFT.draw_from_rift_to_void() end
'''
match_indent = true
# same but for cryptid's draw_from_hand_to_run
[[patches]]
[patches.pattern]
target = "functions/button_callbacks.lua"
pattern = 'G.FUNCS.draw_from_hand_to_run()'
position = "after"
payload = '''
if G.riftraft_rifthand then RIFTRAFT.draw_from_rift_to_void() end
'''
match_indent = true

# end booster pack if you use the last card available
[[patches]]
[patches.pattern]
target = "functions/button_callbacks.lua"
pattern = "G.GAME.pack_choices = G.GAME.pack_choices - 1"
position = "after"
payload = '''
if #G.pack_cards.cards == 0 then
    G.CONTROLLER.interrupt.focus = true
    if prev_state == G.STATES.SMODS_BOOSTER_OPENED and booster_obj.name:find('Arcana') then inc_career_stat('c_tarot_reading_used', 1) end
    if prev_state == G.STATES.SMODS_BOOSTER_OPENED and booster_obj.name:find('Celestial') then inc_career_stat('c_planetarium_used', 1) end
    G.FUNCS.end_consumeable(nil, delay_fac)
end
'''
match_indent = true

# right click deselects all in void
[[patches]]
[patches.pattern]
target = "engine/controller.lua"
pattern = '''
    G.hand:unhighlight_all()
end
'''
position = "after"
payload = '''
if not G.SETTINGS.paused and G.riftraft_rifthand and G.riftraft_rifthand.highlighted[1] then 
    if (self.locked) or 
    (self.locks.frame) or
    (G.GAME.STOP_USE and G.GAME.STOP_USE > 0) then return end
    G.riftraft_rifthand:unhighlight_all()
end
'''
match_indent = true

# cryptid fix: don't make the booster set the edition of contained cards for void packs
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = "local edi = self.edition or {}"
position = "after"
payload = '''
if self.config.center.kind == 'Rift' then edi = {} end -- don't include void packs
'''
match_indent = true